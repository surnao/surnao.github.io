<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://surbao.top/atom.xml" rel="self"/>
  
  <link href="https://surbao.top/"/>
  <updated>2024-06-07T06:26:13.862Z</updated>
  <id>https://surbao.top/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sort排序</title>
    <link href="https://surbao.top/2024/06/07/sort%E6%8E%92%E5%BA%8F/"/>
    <id>https://surbao.top/2024/06/07/sort%E6%8E%92%E5%BA%8F/</id>
    <published>2024-06-07T06:21:48.138Z</published>
    <updated>2024-06-07T06:26:13.862Z</updated>
    
    <content type="html"><![CDATA[<h4 id="定义及用法"><a href="#定义及用法" class="headerlink" title="定义及用法"></a>定义及用法</h4><p>sort()  方法用于对数组的元素进行排序，并返回数组。排序顺序可以是按字母或数字，也可以是升序（向上）或降序（向下）。默认排序顺序是根据字符串UniCode码。</p><p>语法：Array.sort(sortBy);</p><p>参数sortBy可选，用来规定排序的顺序，但必须是函数。</p><h5 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h5><p>在数组中的值为<code>number</code>​类型时，结果并不是和正常排序一样，而是字符编码的出现顺序排列的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">10</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">sort</span>())  <span class="comment">//[ 10, 2, 2, 6, 8, 8 ]</span></span><br></pre></td></tr></table></figure><p>如要得到想要的结果，不管是升序还是降序，就需要提供比较函数了。该函数比较两个值的大小，然后返回一个用于说明这两个值的相对顺序的数字。</p><p>比较函数应该具有两个参数 a 和 b，其返回值如下：</p><ul><li>若 a 小于 b，即 a - b 小于零，则返回一个小于零的值，数组将按照升序排列。</li><li>若 a 等于 b，则返回零。</li><li>若 a 大于 b, 即 a - b 大于零，则返回一个大于零的值，数组将按照降序排列。</li></ul><h5 id="例2-升序排列"><a href="#例2-升序排列" class="headerlink" title="例2  升序排列"></a>例2  <strong>升序排列</strong></h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">10</span>]</span><br><span class="line">    arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a - b</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)<span class="comment">//[2, 2, 6, 8, 8, 10]</span></span><br></pre></td></tr></table></figure><h5 id="例3-降序排列"><a href="#例3-降序排列" class="headerlink" title="例3 降序排列"></a>例3 降序排列</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">10</span>]</span><br><span class="line">    arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> b - a</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)<span class="comment">//[ 10, 8, 8, 6, 2, 2 ]</span></span><br></pre></td></tr></table></figure><p>追根究底，a指什么？b指什么？内部用怎样的方法实现的排序？</p><p>首先改变数组，看一下a指的到底是什么</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">1</span>]</span><br><span class="line">    arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a:&quot;</span> + a)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="comment">//a:8</span></span><br><span class="line"><span class="comment">//a:2</span></span><br><span class="line"><span class="comment">//a:10</span></span><br><span class="line"><span class="comment">//a:1</span></span><br><span class="line"><span class="comment">//[6, 8, 2, 10, 1]</span></span><br></pre></td></tr></table></figure><p>很容易看出a的范围是<code>[arr[1],arr[arr.length-1]]</code>​.另外能看出当函数返回一个正值时，数组并没有发生变化（0也是）</p><p>接下来再看一下b指的是什么</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">1</span>]</span><br><span class="line">    arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;b:&quot;</span> + b)</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="comment">//b:6</span></span><br><span class="line"><span class="comment">//b:8</span></span><br><span class="line"><span class="comment">//b:2</span></span><br><span class="line"><span class="comment">//b:10</span></span><br><span class="line"><span class="comment">//[1, 10, 2, 8, 6]</span></span><br></pre></td></tr></table></figure><p>b的范围<code>[arr[0],arr[arr.length-2]</code>​，另外在这里还获得一个使数组反序的方法（另外一个是数组的<code>reverse()</code>​方法）</p><p>a和b的范围就这样被简单的确定了，但在真正排序的时候就不是这样简单了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">1</span>]</span><br><span class="line">    arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;b:&quot;</span> + b)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a:&quot;</span> + a)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;------&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="comment">//b:6</span></span><br><span class="line"><span class="comment">//a:8</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:8</span></span><br><span class="line"><span class="comment">//a:2</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:8</span></span><br><span class="line"><span class="comment">//a:2</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:6</span></span><br><span class="line"><span class="comment">//a:2</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:6</span></span><br><span class="line"><span class="comment">//a:10</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:8</span></span><br><span class="line"><span class="comment">//a:10</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:8</span></span><br><span class="line"><span class="comment">//a:1</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:6</span></span><br><span class="line"><span class="comment">//a:1</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//b:2</span></span><br><span class="line"><span class="comment">//a:1</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//[1, 2, 6, 8, 10]</span></span><br></pre></td></tr></table></figure><p>先把数据整理一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//[6, 8, 2, 10, 1]</span></span><br><span class="line">[&#123; <span class="attr">b</span>: <span class="number">6</span>, <span class="attr">a</span>: <span class="number">8</span> &#125;],</span><br><span class="line">[&#123; <span class="attr">b</span>: <span class="number">8</span>, <span class="attr">a</span>: <span class="number">2</span> &#125;, &#123; <span class="attr">b</span>: <span class="number">8</span>, <span class="attr">a</span>: <span class="number">2</span> &#125;, &#123; <span class="attr">b</span>: <span class="number">6</span>, <span class="attr">a</span>: <span class="number">2</span> &#125;],</span><br><span class="line">[&#123; <span class="attr">b</span>: <span class="number">6</span>, <span class="attr">a</span>: <span class="number">10</span> &#125;, &#123; <span class="attr">b</span>: <span class="number">8</span>, <span class="attr">a</span>: <span class="number">10</span> &#125;],</span><br><span class="line">[&#123; <span class="attr">b</span>: <span class="number">8</span>, <span class="attr">a</span>: <span class="number">1</span> &#125;, &#123; <span class="attr">b</span>: <span class="number">6</span>, <span class="attr">a</span>: <span class="number">1</span> &#125;, &#123; <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">a</span>: <span class="number">1</span> &#125;],</span><br></pre></td></tr></table></figure><p>通过测试以及研究源码<a href="https://github.com/v8/v8/blob/98d735069d0937f367852ed968a33210ceb527c2/src/js/array.js#L709">v8源码sort部分</a>可得出结论，如果要排序的元素个数是 <code>n</code>​的时候，会有以下几种情况：</p><ol><li>当 <code>n&lt;=10</code>​时，采用插入排序；</li><li>当<code>10&lt;n&lt;=1000</code>​时，采用中位数作为哨兵元素；</li><li>当<code>n&gt;1000</code>​，每隔<code>200~215</code>​个元素挑出一个元素，放到一个新数组中，然后对它排序，找到中间位置的数，以此作为中位数。</li></ol><h4 id="按照数组对象的某个属性排序"><a href="#按照数组对象的某个属性排序" class="headerlink" title="按照数组对象的某个属性排序"></a><strong>按照数组对象的某个属性排序</strong></h4><h5 id="例4"><a href="#例4" class="headerlink" title="例4"></a>例4</h5><p>现在有一组对象，包含”id，value”等属性，实现按照value对这些对象进行排序。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">value</span>: <span class="number">100</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">value</span>: <span class="number">120</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;3&#x27;</span>, <span class="attr">value</span>: <span class="number">80</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;4&#x27;</span>, <span class="attr">value</span>: <span class="number">90</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;5&#x27;</span>, <span class="attr">value</span>: <span class="number">130</span> &#125;</span><br><span class="line">]</span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span> <span class="title function_">sortBy</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> a.<span class="property">value</span> - b.<span class="property">value</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="comment">//&#123;id: &#x27;3&#x27;, value: 80&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;4&#x27;, value: 90&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;1&#x27;, value: 100&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;2&#x27;, value: 120&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;5&#x27;, value: 130&#125;</span></span><br></pre></td></tr></table></figure><p>假如现在不规定按照哪一个属性排序，比如除了value属性，还有其他的属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">value</span>: <span class="number">100</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">value</span>: <span class="number">120</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;3&#x27;</span>, <span class="attr">value</span>: <span class="number">80</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;4&#x27;</span>, <span class="attr">value</span>: <span class="number">90</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;5&#x27;</span>, <span class="attr">value</span>: <span class="number">130</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sortBy</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[props] - b[props];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="title function_">sortBy</span>(<span class="string">&quot;value&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="comment">//&#123;id: &#x27;3&#x27;, value: 80&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;4&#x27;, value: 90&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;1&#x27;, value: 100&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;2&#x27;, value: 120&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;5&#x27;, value: 130&#125;</span></span><br></pre></td></tr></table></figure><p>假如value相等的情况下，是否可以按照其他属性的大小排序输出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">value</span>: <span class="number">100</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">value</span>: <span class="number">120</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;4&#x27;</span>, <span class="attr">value</span>: <span class="number">80</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;3&#x27;</span>, <span class="attr">value</span>: <span class="number">80</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">id</span>: <span class="string">&#x27;5&#x27;</span>, <span class="attr">value</span>: <span class="number">130</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sortBy</span>(<span class="params">val1,val2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.<span class="property">val1</span>== b.<span class="property">val1</span>) <span class="keyword">return</span> a.<span class="property">val2</span>- b.<span class="property">val2</span>;</span><br><span class="line">        <span class="keyword">return</span> a.<span class="property">val1</span>- b.<span class="property">val1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="title function_">sortBy</span>(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;id&quot;</span>));</span><br><span class="line"><span class="comment">//&#123;id: &#x27;3&#x27;, value: 80&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;4&#x27;, value: 80&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;1&#x27;, value: 100&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;2&#x27;, value: 120&#125;</span></span><br><span class="line"><span class="comment">//&#123;id: &#x27;5&#x27;, value: 130&#125;</span></span><br></pre></td></tr></table></figure><p>如此，即可实现，甚至可以使用argments来获取更多的参数，用以传入更多的字段作为判断条件。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>​<code>sort()</code>​方法没有参数时，按照字符的Unicode进行排序（把数组里面当成字符串处理）</li><li>通过给<code>sort()</code>​的参数返回一个负值可以实现数组<code>reverse()</code>​效果</li><li>​<code>sort()</code>​ 参数返回 <code>a - b</code>​时，数组是升序，返回<code>-(a - b)</code>​ 即<code>b - a</code>​时，数组是降序</li></ol><p>‍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;定义及用法&quot;&gt;&lt;a href=&quot;#定义及用法&quot; class=&quot;headerlink&quot; title=&quot;定义及用法&quot;&gt;&lt;/a&gt;定义及用法&lt;/h4&gt;&lt;p&gt;sort()  方法用于对数组的元素进行排序，并返回数组。排序顺序可以是按字母或数字，也可以是升序（向上）或降序（向</summary>
      
    
    
    
    <category term="JS" scheme="https://surbao.top/categories/JS/"/>
    
    
    <category term="sort" scheme="https://surbao.top/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>cookie、sessionStorage 和 localStorage</title>
    <link href="https://surbao.top/2024/06/07/cookie%E3%80%81sessionStorage%20%E5%92%8C%20localStorage/"/>
    <id>https://surbao.top/2024/06/07/cookie%E3%80%81sessionStorage%20%E5%92%8C%20localStorage/</id>
    <published>2024-06-07T06:15:10.305Z</published>
    <updated>2024-06-07T06:20:27.250Z</updated>
    
    <content type="html"><![CDATA[<h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><h5 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h5><p>Cookie是保存在计算机上的一种文件。当我们使用计算机浏览网页时，服务器会生成一个证书并将其返回给我们的计算机。这个证书就是cookie。一般来说，cookie是服务器写给客户端的文件，也可以称为浏览器缓存。</p><p>简单来说，它可以读取并保存你访问网站时产生的一些行为信息，这些信息通常是加密的，否则会侵犯用户的隐私。Cookie也可以帮助加快第二次访问。通常，当我们访问一些网页时，系统会提示我们是否要保存用户名和密码。下次登录时，我们可以自动登录，无需再次登录。<br>​</p><h5 id="2-用法"><a href="#2-用法" class="headerlink" title="2.用法"></a>2.用法</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入js-cookie.js</span></span><br><span class="line"><span class="number">1.</span>直接引用cdn：&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="number">2.</span>本地下载下来后：&lt;script src=<span class="string">&quot;/plugins/js.cookie.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="number">3.</span>模块化开发时: npm install js-cookie  <span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="comment">// 写入cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;value&#x27;</span>);</span><br><span class="line"><span class="comment">// 读取cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;name&#x27;</span>); <span class="comment">//&#x27;value&#x27;</span></span><br><span class="line"><span class="comment">// 读取所有可见的cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">get</span>();<span class="comment">//&#123;name: &#x27;value&#x27;&#125;</span></span><br><span class="line"><span class="comment">// 删除某项cookie值</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//cookie的set方法支持的属性有：</span></span><br><span class="line"><span class="comment">//expires-&gt;过期时间</span></span><br><span class="line"><span class="comment">//path-&gt;设置为指定页面创建cookie</span></span><br><span class="line"><span class="comment">//domain-&gt;设置对指定域名及指定域名的子域名可见</span></span><br><span class="line"><span class="comment">//secure-&gt;设置是否只支持https,默认是false</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;value&#x27;</span>);  <span class="comment">//创建简单的cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, &#123; <span class="attr">expires</span>: <span class="number">27</span> &#125;);<span class="comment">//创建有效期为27天的cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, &#123; <span class="attr">expires</span>: <span class="number">17</span>, <span class="attr">path</span>: <span class="string">&#x27;/userInfo&#x27;</span>  &#125;); <span class="comment">//为userInfo页创建有效期17天的cookie</span></span><br><span class="line"><span class="comment">//删除指定页面path的cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;key&#x27;</span>, &#123; <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//注：如果存的是对象,如:</span></span><br><span class="line"><span class="keyword">const</span> userInfo = &#123;age : <span class="number">111</span>, score : <span class="number">90</span>&#125;;</span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;userInfo&#x27;</span>, userInfo);</span><br><span class="line"><span class="comment">//取出来的userInfo需要进行JSON的解析,解析为对象</span></span><br><span class="line"><span class="keyword">const</span> userInfo = <span class="title class_">JSON</span>.<span class="title function_">parse</span>( <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;userInfo&#x27;</span>) );</span><br><span class="line"><span class="comment">//也可以使用</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">getJSON</span>(<span class="string">&#x27;userInfo&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="3-生命周期与优缺点"><a href="#3-生命周期与优缺点" class="headerlink" title="3.生命周期与优缺点"></a>3.生命周期与<strong>优缺</strong>点</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Cookie时指定的expires值，就是Cookie的生存周期，在这个周期内Cookie有效，超出周期Cookie就会被清除。</span></span><br><span class="line"><span class="comment">//注：Cookie的生存周期设置为 &#x27;0&#x27;或负值, 在关闭浏览器时，就会马上清除Cookie。</span></span><br></pre></td></tr></table></figure><p>优点</p><ul><li><p><strong>Cookie易于使用和实现</strong></p><p>实现cookie的使用要比任何其他Internet协议容易得多。</p></li><li><p><strong>占用更少的内存</strong></p><p>不需要任何服务器资源，并存储在用户的计算机上，因此不会给服务器带来额外的负担。</p></li><li><p><strong>持久性</strong></p><p>当在客户端的浏览器上设置Cookie时，它可以持续数天，数月甚至数年。这样可以轻松保存用户首选项和访问信息，并在用户每次返回站点时保持此信息可用。此外，由于Cookie存储在客户端的硬盘上，因此如果服务器崩溃，它们仍然可用。</p></li></ul><p>缺点</p><ul><li><p><strong>不安全</strong></p><p>cookie是以明文形式存储，可能会造成安全风险，因为任何人都可以打开并篡改cookie。</p></li><li><p><strong>数量受到限制</strong></p><p>浏览器能创建的 Cookie 数量最多为 <code>300</code>​ 个，并且每个不能超过 <code>4KB</code>​，每个 Web 站点能设置的 Cookie 总数不能超过 20 个。</p></li><li><p><strong>可以被禁用</strong></p><p>用户可以选择从浏览器设置中禁用其计算机上的cookie。这意味着用户可以决定不在他的浏览器上使用cookie，这可能会使程序在浏览器的运行中产生一些问题。</p></li></ul><h4 id="SessionStorage和localStorage"><a href="#SessionStorage和localStorage" class="headerlink" title="SessionStorage和localStorage"></a>SessionStorage和localStorage</h4><h5 id="1-基本概念-1"><a href="#1-基本概念-1" class="headerlink" title="1.基本概念"></a>1.基本概念</h5><p>浏览器提供的本地存储机制</p><h5 id="2-用法-1"><a href="#2-用法-1" class="headerlink" title="2.用法"></a>2.用法</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//它们的 API 基本相同,包括:</span></span><br><span class="line"><span class="comment">// setItem(key, value): 存储数据</span></span><br><span class="line"><span class="comment">// getItem(key): 获取数据</span></span><br><span class="line"><span class="comment">// removeItem(key): 删除数据</span></span><br><span class="line"><span class="comment">// clear(): 清空所有存储的数据</span></span><br><span class="line"><span class="comment">// key(i): 获取第 i 个键名</span></span><br><span class="line"><span class="comment">// length: 获取存储的数据个数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储数据</span></span><br><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;value1&quot;</span>);</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;value2&quot;</span>);</span><br><span class="line"><span class="comment">// 获取数据</span></span><br><span class="line"><span class="keyword">const</span> value1 = <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;key1&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> value2 = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;key2&quot;</span>);</span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;key1&quot;</span>);</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;key2&quot;</span>);</span><br><span class="line"><span class="comment">// 清空存储</span></span><br><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">clear</span>(); </span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>();</span><br></pre></td></tr></table></figure><h5 id="3-生命周期与优缺点-1"><a href="#3-生命周期与优缺点-1" class="headerlink" title="3.生命周期与优缺点"></a>3.生命周期与优缺点</h5><ul><li>sessionStorage 只在当前浏览器标签页有效,关闭标签页即失效。localStorage 永久有效,除非主动删除。</li></ul><p>localStorage 优点:</p><ul><li>数据持久存储。除非主动删除,否则一直存在。</li><li>可以保存结构化数据,如对象、数组。</li></ul><p>localStorage 缺点:</p><ul><li>不能存储敏感数据,因为数据可以被恶意获取。</li><li>可能导致本地存储空间被占用过多。</li></ul><p>sessionStorage 优点:</p><ul><li>数据临时存储,会话结束自动删除,不会占用过多本地存储空间。</li><li>可以在同一个会话的不同页面中共享数据。</li></ul><p>sessionStorage 缺点:</p><ul><li>数据不持久,会话结束随之删除。</li><li>不能保存敏感数据,数据只在客户端,容易被获取。</li></ul><h4 id="三者异同"><a href="#三者异同" class="headerlink" title="三者异同"></a>三者异同</h4><table><thead><tr><th>特性</th><th>Cookie</th><th>localStorage</th><th>sessionStorage</th></tr></thead><tbody><tr><td>数据的生命周期</td><td>一般由服务器生成，可设置失效时间。如果在浏览器端生成Cookie，默认是关闭浏览器后失效</td><td>除非被清除，否则永久保存</td><td>仅在当前会话下有效，关闭页面或浏览器后被清除</td></tr><tr><td>存放数据大小</td><td>4K左右</td><td>一般为5MB<br /></td><td></td></tr><tr><td>与服务器端通信</td><td>每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题</td><td>仅在客户端（即浏览器）中保存，不参与和服务器的通信</td><td></td></tr><tr><td>存储类型</td><td>只能存储字符串</td><td>可以存储字符串、布尔值、整数、浮点数、对象、数组等</td><td></td></tr><tr><td>作用域</td><td>在同源的窗口&#x2F;标签页之间共享</td><td></td><td></td></tr><tr><td>典型使用场景</td><td>保存用户登录状态、购物车信息等</td><td>长期保存键值对数据,比如用户偏好设置或浏览历史</td><td>保存一个会话的信息,在用户登出或浏览器关闭之前一直存在</td></tr></tbody></table><p>‍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;cookie&quot;&gt;&lt;a href=&quot;#cookie&quot; class=&quot;headerlink&quot; title=&quot;cookie&quot;&gt;&lt;/a&gt;cookie&lt;/h4&gt;&lt;h5 id=&quot;1-基本概念&quot;&gt;&lt;a href=&quot;#1-基本概念&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="浏览器" scheme="https://surbao.top/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
    <category term="缓存" scheme="https://surbao.top/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
</feed>
